services:
  # Backend сервис (NestJS)
  backend:
    image: node:22
    container_name: backend
    restart: always
    working_dir: /app
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    environment:
      - NODE_ENV=production
      - DATABASE_HOST=host.docker.internal
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=root
      - DATABASE_PASSWORD=example
      - DATABASE_NAME=practicum
      - LOGGER_FORMAT=production
    command: sh -c "npm ci --include=dev && npm run build && npm run start:prod"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - film_network

  # Frontend сервис - сборка production бандла
  frontend:
    image: node:22
    container_name: frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
      - frontend_dist:/app/dist
    environment:
      - VITE_API_URL=https://film.stan99.nomorepartiessbs.ru/api/afisha
      - VITE_CDN_URL=https://film.stan99.nomorepartiessbs.ru/content/afisha
    command: sh -c "npm ci && npm run build"
    depends_on:
      - backend
    networks:
      - film_network

  # Nginx для проксирования
  nginx:
    image: nginx:alpine
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - frontend_dist:/usr/share/nginx/html
      - certbot_www:/var/www/certbot/:ro
      - certbot_conf:/etc/nginx/ssl/:ro
    depends_on:
      - frontend
      - backend
    networks:
      - film_network

  certbot:
    image: certbot/certbot:latest
    volumes:
      - certbot_www:/var/www/certbot/:rw
      - certbot_conf:/etc/letsencrypt/:rw

networks:
  film_network:
    driver: bridge

volumes:
  backend_node_modules:
  frontend_node_modules:
  frontend_dist:
  certbot_www:
  certbot_conf: